---
title: "Class 10: Halloween Candy Project"
author: "Elena"
format: pdf
editor: visual
toc: true
---

# Favourite Candy

## Importing Candy Data

```{r}
candy_file <- read.csv("candy-data.csv")

candy = data.frame(candy_file, row.names=1)
head(candy)
```
## Q1. How many different candy types are in this dataset?

85 types of candy.

```{r}
nrow(candy)
```

## Q2. How many fruity candy types are in the dataset?

38 fruity candy types.

```{r}
sum(candy$fruity)
```

## Q3. What is your favourite candy in the dataset and what is its winpercent value?

Haribo Happy Cola, 34.15896.

```{r}
candy["Haribo Happy Cola", ]$winpercent
```

## Q4. What is the winpercent value for “Kit Kat”?

76.7686.

```{r}
candy["Kit Kat", ]$winpercent
```

## Q5. What is the winpercent value for “Tootsie Roll Snack Bars”?

49.6535.

```{r}
candy["Tootsie Roll Snack Bars", ]$winpercent
```

## Q6. Is there any variable/column that looks to be on a different scale to the majority of the other columns in the dataset?

Winpercent.

```{r}
#install.packages("skimr")
library(skimr)
skim(candy)
```

```{r}
skimcandy <- skim(candy)
skimcandy$numeric.mean
#12th value has different scale
#Therefore look at what the 12th variable
skimcandy[12,]
```

## Q7. What do you think a zero and one represent for the candy$chocolate column?

0 means that the candy does not have chocolate in it, whereas 1 indicates that the candy does have chocolate.

```{r}
candy$chocolate
```

## Q8. Plot a histogram of winpercent values

```{r}
library(ggplot2)
ggplot(candy) + aes(winpercent) + geom_histogram(bins=10, col="red", fill="pink")
```

## Q9. Is the distribution of winpercent values symmetrical?

No.

## Q10. Is the center of the distribution above or below 50%?

Below

## Q11. On average is chocolate candy higher or lower ranked than fruit candy?

Chocolate.

```{r}
#Chocolate
chocolate.inds <- as.logical(candy$chocolate)
chocolate.win <- candy[chocolate.inds,]$winpercent
mean(chocolate.win)
```

```{r}
#Fruit Candy
fruit.inds <- as.logical(candy$fruity)
fruit.win <- candy[fruit.inds,]$winpercent
mean(fruit.win)
```

## Q12. Is this difference statistically significant?

Yes.

```{r}
t.test(chocolate.win,fruit.win)
```

# Candy Rankings

## Q13. What are the five least liked candy types in this set?

Nik L Nip, Boston Baked Beans, Chiclets, Super Bubble, Jawbusters.

The base R `sort()` and `order()` functions are very useful! Note: `order()` tells how the input would be rearranged.

```{r}
#Example
x <- c(5,1,2,6)
sort(x)
```

```{r}
#Example
y <- c("barry","alice","chandra")
y
sort(y)
order(y)
```

```{r}
inds <- order(candy$winpercent)
inds
candy[inds,]
```

```{r}
head(candy[order(candy$winpercent),], n=5)
```

```{r}
#Or, using dplyr...
library(dplyr)
candy %>% arrange(winpercent) %>% head(5)
```

## Q14. What are the top 5 all time favorite candy types out of this set?

Reese's Peanut Butter Cup, Reese's Miniatures, Twix, Kit Kat, Snickers.

```{r}
tail(candy[order(candy$winpercent),], n=5)
```

## Q15. Make a first barplot of candy ranking based on winpercent values.

```{r}
library(ggplot2)

ggplot(candy) + 
  aes(winpercent, rownames(candy)) +
  geom_col() +
  labs(y="candy")
```

## Q16. This is quite ugly, use the reorder() function to get the bars sorted by winpercent?

```{r}
ggplot(candy) + 
  aes(winpercent, reorder(rownames(candy),winpercent)) +
  geom_col() +
  labs(y="candy")
```

```{r}
#Creating colour vector
#First, create a vector that is all black
my_cols=rep("black", nrow(candy))
#Then, replace choco, bar, fruity with respective colours
my_cols[as.logical(candy$chocolate)] = "#72431F" #brown
my_cols[as.logical(candy$bar)] = "#4DA3C9" #blue
my_cols[as.logical(candy$fruity)] = "#EBADC6" #pink
my_cols
```

```{r}
ggplot(candy) + 
  aes(winpercent, reorder(rownames(candy),winpercent)) +
  geom_col(fill=my_cols) +
  labs(y="candy")
```

```{r}
ggsave("candybarplot.png")
```


## Q17. What is the worst ranked chocolate candy?

Sixlets.

## Q18. What is the best ranked fruity candy?

Starburst.

# Price

```{r}
#install.packages("ggrepel")
library(ggrepel)
ggplot(candy) +
  aes(winpercent, pricepercent, label=rownames(candy)) +
  geom_point(col=my_cols) + 
  geom_text_repel(col=my_cols, size=3.3, max.overlaps = 5)
```

## Q19. Which candy type is the highest ranked in terms of winpercent for the least money - i.e. offers the most bang for your buck?

Fruity candy - relatively well liked, and comparatively cheap. Reese's Miniatures is the cheapest of the top five popular candies.

## Q20. What are the top 5 most expensive candy types in the dataset and of these which is the least popular?

Nik L Nip, Nestle Smarties, Ring pop, Hershey's Krackel, Hershey's Milk Chocolate.
Nik L Nip is least popular.

```{r}
ord <- order(candy$pricepercent, decreasing = TRUE)
head( candy[ord,c(11,12)], n=5 )
```

## Q21. NA

# Correlation

```{r}
#install.packages("corrplot")
library(corrplot)
cij <- cor(candy)
corrplot(cij)
```

## Q22. Examining this plot what two variables are anti-correlated (i.e. have minus values)?

Chocolate and fruity.

## Q23. Similarly, what two variables are most positively correlated?

Chocolate and bar.

# PCA

Use `prcomp()` - it has an important argument that is set to `scale=FALSE` by default. In this case, we would want to use `scale=TRUE` due to winpercent being in a different range.

```{r}
pca <- prcomp(candy, scale=T)
summary(pca)
```

```{r}
plot(pca$x[,1],pca$x[,2],col=my_cols,pch=16)
```
Make ggplot

```{r}
#First, make dataframe in order to make ggplot
#cbind function will add columns with PCA data onto candy dataframe
my_data <- cbind(candy, pca$x[,1:3])

p <- ggplot(my_data) + 
        aes(x=PC1, y=PC2, 
            size=winpercent/100,  
            text=rownames(my_data),
            label=rownames(my_data)) +
        geom_point(col=my_cols) +
        geom_text_repel(col=my_cols, max.overlaps=7, size=3) +
        labs(title="Halloween Candy PCA Space",
       subtitle="Coloured by type: chocolate bar (blue), chocolate other (brown), fruity (pink), other (black)",
       caption="Data from 538")

p
```

```{r}
par(mar=c(8,4,2,2))
barplot(pca$rotation[,1], las=2, ylab="PC1 Contribution")
```

## Q24. What original variables are picked up strongly by PC1 in the positive direction? Do these make sense to you?

Fruity, followed by pluribus and hard. Yes, because we saw that fruity candies are often hard candy that come in a bag or box of multiple candies.